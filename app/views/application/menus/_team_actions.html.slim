/ menu items for mobile sidenav
/ this is basically the same as in layouts/team

- action = params[:action].to_sym
- if can? :dashboard, @team
  li
    = link_to t('team.menu.dashboard'), dashboard_team_path(@team), class: "list-group-item list-group-item-action #{'active' if controller.is_a? TeamsController and action == :dashboard}", target: :_self
- if can? :dashboard, @current_member
  li
    = link_to t('team.menu.my_dashboard'), dashboard_team_member_path(@team, @current_member), class: "list-group-item list-group-item-action #{'active' if controller.is_a? Team::MembersController and [:dashboard, :edit].include?(action) and @member == @current_member}", target: :_self
  li
    = link_to t('team.menu.my_progresses'), team_member_progresses_path(@team, @current_member), class: "list-group-item list-group-item-action #{'active' if controller.is_a? Team::Member::ProgressesController and @member == @current_member}", target: :_self
  li
    = link_to t('team.menu.my_unavailability'), team_member_unavailabilities_path(@team,@current_member), class: "list-group-item list-group-item-action #{'active' if controller.is_a? Team::Member::UnavailabilitiesController}", target: :_self
li
  = link_to t('team.menu.exports'), team_export_index_path(@team), class: "list-group-item list-group-item-action #{'active' if controller.is_a? Team::ExportController}", target: :_self
- if can? :index, Team::Progress.new(team: @team, member: @current_member) and @team.progresses.kept.any?
  li
    = link_to t('team.menu.progresses'), team_progresses_path(@team), class: "list-group-item list-group-item-action #{'active' if controller.is_a? Team::ProgressesController}", target: :_self
- if can? :index, Team::Unavailability.new(team: @team, member: @current_member) and @team.unavailabilities.kept.any?
  li
    = link_to t('team.menu.unavailability'), team_unavailabilities_path(@team), class: "list-group-item list-group-item-action #{'active' if controller.is_a? Team::UnavailabilitiesController}", target: :_self
- if can? :index, Team::Member.new(team: @team)
  li
    = link_to t('team.menu.members'), team_members_path(@team), class: "list-group-item list-group-item-action #{'active' if (controller.is_a? Team::MembersController and not @member == @current_member and not action == :outstanding) or (controller.is_a? Team::Member::ProgressesController and not @member == @current_member)}", target: :_self
- if can? :outstanding, Team::Member.new(team: @team)
  li
    = link_to outstanding_team_members_path(@team), class: "list-group-item list-group-item-action #{'active' if (controller.is_a? Team::MembersController and action == :outstanding)}", target: :_self
      = t('team.menu.outstanding_members')
      - if @team.members.where(status: :requested).any? or @team.members.where(status: :invited).any?
        - if @team.members.where(status: :requested).any?
          span.new.badge
            = @team.members.where(status: :requested).size
        - else
          span.new.badge.grey.lighten-4.black-text data = {badge: {caption: ''}}
            = @team.members.where(status: :invited).size
