////////////
//
// Copyright 2018 M. Hoppe & N. Justus
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
////////////

= simple_form_for(:filter, url: url, method: :get) do |f|
  - params[:filter][:member_id] = params[:filter][:member_id].select {|e| not e.blank?} if params[:filter] and params[:filter][:member_id]&.any?
  - params[:filter][:month] = params[:filter][:month].select {|e| not e.blank?} if params[:filter] and params[:filter][:month]&.any?

  - selected_member = if params[:filter] and params[:filter][:member_id]&.any? then params[:filter][:member_id] else local_assigns[:available_members]&.map {|m| m.id} end
  - selected_month = if params[:filter] and params[:filter][:month]&.any? then params[:filter][:month] else available_months_in_years end
  - selected_tag_list = params[:filter][:tag_list] if params[:filter]

  - if local_assigns[:available_members]
    = f.input :member_id, collection: available_members, selected: selected_member, wrapper_html: {class: 's12 m3 l2'}, input_html: {multiple: true}, label_method: lambda {|m| m.user.name}, include_blank: false, required: false

  = f.input :month, collection: available_months_in_years, selected: selected_month, wrapper_html: {class: "s12 #{if local_assigns[:available_members] then "m3 l2" else "m4 l4" end}"}, input_html: {multiple: true}, label_method: lambda {|date| "#{t('date.month_names')[date.month]} #{date.year}"}, include_blank: false, required: false

  .col.l6 class="#{ if local_assigns[:available_members] then "hide-on-small-only m4" else "s12 m6" end }"
    = render 'acts_as_taggable_on/tag_list', f: f, for_class: 'filter', value: selected_tag_list, collection: Team::Progress.tags_on(:tags)
  .col.s6.m2
    .button-group
      = f.button :button, class: 'blue btn-floating tooltipped', data: {position: 'bottom', tooltip: t('team.progress.filter.apply')}
        = mdi_tag 'filter'

      = link_to url, class: 'waves-effect waves-light btn-floating orange darken-4 tooltipped', data: {position: 'bottom', tooltip: t('team.progress.filter.clear')}
        = mdi_tag 'filter-remove'
