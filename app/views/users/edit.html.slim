////////////
//
// Copyright 2018 M. Hoppe & N. Justus
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
////////////

- content_for :subtitle
  | #{t('user.self.edit.title')}
.row
  .col.s12.l9
    = render 'application/form_errors', errors: @user.errors
    = simple_form_for(@user) do |f|
      .row
        .col.s12.m6
          .section
            = f.input :last_name, disabled: false, wrapper_html: {class: 's6'}
            = f.input :first_name, disabled: false, wrapper_html: {class: 's6'}
            = f.input :email, disabled: false, wrapper_html: {class: 's12'}
            = f.input :username, disabled: true, wrapper_html: {class: 's6'}
            .col.s6.input-field
              = f.label :role, class: 'disabled active'
              .col.s6.offset-s3 style='height=3rem; padding-top: 15px;'
                = render 'role_badge', user: @user
          .divider
          .section
            = f.input :department, wrapper_html: {class: 's12'}
            - birth_date = if @user.birth_date then l(@user.birth_date) else nil end
            = f.input :birth_date, as: :date, wrapper_html: {class: 's12'}, input_html: {value: birth_date, class: 'no-autoinit'}, label_html: {class: 'active'}
        .col.s12.m6
          - ([['generator', f.object.generated_avatar_url], ['local', f.object.avatar_url]] + f.object.identities.where.not(avatar_url: nil).pluck(:provider, :avatar_url)).each do |type|
            .col.s12.l6
              .card-panel
                .row
                  .col.s2.m4.offset-m4.center.l6.offset-l3
                    - unless type[1].nil?
                      = image_tag type[1], class: 'responsive-img circle'
                  .col.s10.m12
                    label
                      = f.radio_button :avatar_type, type[0], checked: (type[0] == f.object.avatar_type), class: 'with-gap'
                      span
                        = t("devise.omniauth.providers.#{type[0]}")
                  - if type[0] == 'local'
                    = f.input :avatar, label: false, wrapper_html: {class: 's12'}
                    = f.hidden_field :avatar_cache
      .row
        .col.s12
          .button-group
            = f.button :button
            - unless Settings.user.discard.disabled
              = link_to t('user.action.discard'), delete_user_path(@user), class: 'btn waves-effect waves-light red', remote: true

  .col.s12.l3
    .card
      .card-content
        .card-title
          | #{t('user.edit.connect_login_service')}
        = render 'users/login_buttons'
